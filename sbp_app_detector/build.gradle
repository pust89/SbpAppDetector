plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

android {
    namespace 'com.pustovit.sbp_app_detector'
    compileSdk rootProject.compileSdk

    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }

    defaultConfig {
        minSdk rootProject.minSdk
        targetSdk rootProject.targetSdk
        setProperty("archivesBaseName", "sbp_app_detector_" + rootProject.versionName)
        consumerProguardFiles "consumer-rules.pro"

        manifestPlaceholders = [versionCodePlaceholder:rootProject.versionCode, versionNamePlaceholder:rootProject.versionName]
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    dependencies {
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.2'
    }

    // build.gradle (модуль библиотеки)

    def variant = (project.findProperty('variant') ?: 'release') as String
    def variantCap = variant.capitalize()
    // Для запуска таски gradle :sbp_app_detector:buildAar
    tasks.register('buildAar', Copy) {
        group = 'build'
        description = "Собирает AAR (${variant}) и копирует в <root>/build/aar"
        dependsOn("assemble${variantCap}") // например assembleRelease или assembleDebug
        from(layout.buildDirectory.dir('outputs/aar'))
        include('*.aar')
        into(rootProject.layout.buildDirectory.dir('aar'))
// необязательно: переименовать итоговый файл
// rename { "mylib-${variant}.aar" }
    }

}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.github.pust89'
            artifactId = 'SbpAppDetector'
            version = rootProject.versionName
            afterEvaluate {
                from components.release
            }
        }
    }
}